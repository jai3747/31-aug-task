name: Security Scan Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  sca_snyk:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Install Snyk
      run: npm install -g snyk

    - name: Authenticate Snyk
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: snyk auth $SNYK_TOKEN

    - name: Run Snyk to check for vulnerabilities
      run: snyk test --json > snyk_report.json || true

    - name: Upload Snyk report
      uses: actions/upload-artifact@v2
      with:
        name: snyk-report
        path: snyk_report.json

  semgrep:
    runs-on: ubuntu-latest
    needs: sca_snyk
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Semgrep
      run: pip install semgrep

    - name: Run Semgrep
      run: semgrep --config auto --json > semgrep_report.json

    - name: Upload Semgrep report
      uses: actions/upload-artifact@v2
      with:
        name: semgrep-report
        path: semgrep_report.json

    - name: Convert Semgrep report to SARIF
      run: semgrep --config auto --sarif > semgrep.sarif

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: semgrep.sarif

  build_and_scan:
    runs-on: ubuntu-latest
    needs: semgrep
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker buildx create --use
        docker buildx build --file Dockerfile --tag my-node-app --load .

    - name: Check if Docker image was built
      run: |
        if ! docker images | grep my-node-app; then
          echo "Docker image 'my-node-app' not found. Build failed."
          exit 1
        fi

    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@v0.10.0
      with:
        image-ref: my-node-app
        format: 'table'
        output: 'trivy-report.txt'
      
    - name: Check Trivy scan results
      run: |
        if grep -q "CRITICAL" trivy-report.txt; then
          echo "Critical vulnerabilities found in Docker image!"
          exit 1
        else
          echo "No critical vulnerabilities found in Docker image."
        fi

    - name: Upload Trivy scan report
      uses: actions/upload-artifact@v2
      with:
        name: trivy-report
        path: trivy-report.txt
